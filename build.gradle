import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Paths;


apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    //jcenter()
}

dependencies {
	compile 'com.github.shyiko:mysql-binlog-connector-java:0.2.1'
  compile 'com.typesafe:config:1.3.0'
  compile 'mysql:mysql-connector-java:5.1.36'

  compile 'org.apache.logging.log4j:log4j-api:2.7'
  compile  group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
  compile group: 'org.elasticsearch.client', name: 'transport', version: '5.2.2'
  compile 'org.elasticsearch.client:transport:5.2.2'
  compile 'org.apache.tika:tika-parsers:1.12'

  testCompile 'com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.1.14'
  testCompile 'junit:junit:4.+'
  testCompile 'com.h2database:h2:1.4.187'
  testCompile 'org.mockito:mockito-core:1.+'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile group: 'org.elasticsearch.client', name: 'transport', version: '5.2.2:test'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task copyToLib() {
    configurations.testCompile.copy().allDependencies.each {dep ->
        String jarFileName = dep.name + "-" + dep.version + ".jar"
        String directory = "./dist/lib/"
        if(!new File(directory).exists()){
            new File(directory).mkdirs();
        }
        configurations.testCompile.each { File path ->
        	String newJarFilePath = directory + path.name
        	if(!new File(newJarFilePath).exists()){
                Files.copy(path.toPath(), FileSystems.getDefault().getPath(newJarFilePath));
            }
        }
    }
}

jar.dependsOn('copyToLib')
